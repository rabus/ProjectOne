<?xml version="1.0" encoding="UTF-8"?>
<project name="projectzero" default="all">
  
  
  <property file="projectzero.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="compiler.excluded">
    <exclude name="${basedir}/android/gen/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.apk"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
  <path id="jdk.classpath.1.7">
    <fileset dir="${jdk.home.1.7}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxrt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="jre/lib/ext/access-bridge-64.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunmscapi.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
    </fileset>
  </path>
  
  <property name="jdk.bin.android_4.1.2_platform" value="${jdk.home.android_4.1.2_platform}/../../../../../../Program Files/Java/jdk1.7.0_15/bin"/>
  <path id="jdk.classpath.android_4.1.2_platform">
    <fileset dir="${jdk.home.android_4.1.2_platform}">
      <include name="platforms/android-16/android.jar"/>
      <include name="platforms/android-16/data/res"/>
      <include name="tools/support/annotations.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.7}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.android_libs.classpath">
    <fileset dir="${basedir}/android/libs">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="library.core_libs.classpath">
    <pathelement location="${basedir}/core/libs/gdx.jar"/>
  </path>
  
  <path id="library.desktop_libs.classpath">
    <fileset dir="${basedir}/desktop/libs">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <pathelement location="${javac2.home}/javac2.jar"/>
    <pathelement location="${javac2.home}/jdom.jar"/>
    <pathelement location="${javac2.home}/asm4-all.jar"/>
    <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module core -->
  
  <dirname property="module.core.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.core" value="${jdk.home.1.7}"/>
  <property name="module.jdk.bin.core" value="${jdk.bin.1.7}"/>
  <property name="module.jdk.classpath.core" value="jdk.classpath.1.7"/>
  
  <property name="compiler.args.core" value="${compiler.args}"/>
  
  <property name="core.output.dir" value="${module.core.basedir}/out/production/core"/>
  <property name="core.testoutput.dir" value="${module.core.basedir}/out/test/core"/>
  
  <path id="core.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="core.module.production.classpath">
    <path refid="${module.jdk.classpath.core}"/>
    <path refid="library.core_libs.classpath"/>
  </path>
  
  <path id="core.runtime.production.module.classpath">
    <pathelement location="${core.output.dir}"/>
    <path refid="library.core_libs.classpath"/>
  </path>
  
  <path id="core.module.classpath">
    <path refid="${module.jdk.classpath.core}"/>
    <pathelement location="${core.output.dir}"/>
    <path refid="library.core_libs.classpath"/>
  </path>
  
  <path id="core.runtime.module.classpath">
    <pathelement location="${core.testoutput.dir}"/>
    <pathelement location="${core.output.dir}"/>
    <path refid="library.core_libs.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.core">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.core">
    <patternset refid="compiler.excluded"/>
    <patternset refid="excluded.from.module.core"/>
  </patternset>
  
  <path id="core.module.sourcepath">
    <dirset dir="${module.core.basedir}/core">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.core" depends="compile.module.core.production,compile.module.core.tests" description="Compile module core"/>
  
  <target name="compile.module.core.production" depends="register.custom.compilers" description="Compile module core; production classes">
    <mkdir dir="${core.output.dir}"/>
    <javac2 destdir="${core.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.core}/javac">
      <compilerarg line="${compiler.args.core}"/>
      <bootclasspath refid="core.module.bootclasspath"/>
      <classpath refid="core.module.production.classpath"/>
      <src refid="core.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.core"/>
    </javac2>
    
    <copy todir="${core.output.dir}">
      <fileset dir="${module.core.basedir}/core/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
        <patternset refid="excluded.from.compilation.core"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.core.tests" depends="register.custom.compilers,compile.module.core.production" description="compile module core; test classes" unless="skip.tests"/>
  
  <target name="clean.module.core" description="cleanup module">
    <delete dir="${core.output.dir}"/>
    <delete dir="${core.testoutput.dir}"/>
  </target>
  
  
  <!-- Module android -->
  
  <dirname property="module.android.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.android" value="${jdk.home.android_4.1.2_platform}"/>
  <property name="module.jdk.bin.android" value="${jdk.bin.android_4.1.2_platform}"/>
  <property name="module.jdk.classpath.android" value="jdk.classpath.android_4.1.2_platform"/>
  
  <property name="compiler.args.android" value="${compiler.args}"/>
  
  <property name="android.output.dir" value="${module.android.basedir}/out/production/android"/>
  <property name="android.testoutput.dir" value="${module.android.basedir}/out/test/android"/>
  
  <path id="android.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="android.module.production.classpath">
    <path refid="${module.jdk.classpath.android}"/>
    <path refid="library.android_libs.classpath"/>
    <pathelement location="${core.output.dir}"/>
    <path refid="library.core_libs.classpath"/>
  </path>
  
  <path id="android.runtime.production.module.classpath">
    <pathelement location="${android.output.dir}"/>
    <path refid="library.android_libs.classpath"/>
    <path refid="core.runtime.production.module.classpath"/>
  </path>
  
  <path id="android.module.classpath">
    <path refid="${module.jdk.classpath.android}"/>
    <pathelement location="${android.output.dir}"/>
    <path refid="library.android_libs.classpath"/>
    <pathelement location="${core.testoutput.dir}"/>
    <pathelement location="${core.output.dir}"/>
    <path refid="library.core_libs.classpath"/>
  </path>
  
  <path id="android.runtime.module.classpath">
    <pathelement location="${android.testoutput.dir}"/>
    <pathelement location="${android.output.dir}"/>
    <path refid="library.android_libs.classpath"/>
    <path refid="core.runtime.module.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.android">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.android">
    <patternset refid="compiler.excluded"/>
    <patternset refid="excluded.from.module.android"/>
  </patternset>
  
  <path id="android.module.sourcepath">
    <dirset dir="${module.android.basedir}/android">
      <include name="src"/>
      <include name="gen"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.android" depends="compile.module.android.production,compile.module.android.tests" description="Compile module android"/>
  
  <target name="compile.module.android.production" depends="register.custom.compilers,compile.module.core" description="Compile module android; production classes">
    <mkdir dir="${android.output.dir}"/>
    <javac2 destdir="${android.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.android}/javac">
      <compilerarg line="${compiler.args.android}"/>
      <bootclasspath refid="android.module.bootclasspath"/>
      <classpath refid="android.module.production.classpath"/>
      <src refid="android.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.android"/>
    </javac2>
    
    <copy todir="${android.output.dir}">
      <fileset dir="${module.android.basedir}/android/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
        <patternset refid="excluded.from.compilation.android"/>
      </fileset>
      <fileset dir="${module.android.basedir}/android/gen">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
        <patternset refid="excluded.from.compilation.android"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.android.tests" depends="register.custom.compilers,compile.module.android.production" description="compile module android; test classes" unless="skip.tests"/>
  
  <target name="clean.module.android" description="cleanup module">
    <delete dir="${android.output.dir}"/>
    <delete dir="${android.testoutput.dir}"/>
  </target>
  
  
  <!-- Module desktop -->
  
  <dirname property="module.desktop.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.desktop" value="${jdk.home.1.7}"/>
  <property name="module.jdk.bin.desktop" value="${jdk.bin.1.7}"/>
  <property name="module.jdk.classpath.desktop" value="jdk.classpath.1.7"/>
  
  <property name="compiler.args.desktop" value="${compiler.args}"/>
  
  <property name="desktop.output.dir" value="${module.desktop.basedir}/out/production/desktop"/>
  <property name="desktop.testoutput.dir" value="${module.desktop.basedir}/out/test/desktop"/>
  
  <path id="desktop.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="desktop.module.production.classpath">
    <path refid="${module.jdk.classpath.desktop}"/>
    <path refid="library.desktop_libs.classpath"/>
    <pathelement location="${core.output.dir}"/>
    <path refid="library.core_libs.classpath"/>
  </path>
  
  <path id="desktop.runtime.production.module.classpath">
    <pathelement location="${desktop.output.dir}"/>
    <path refid="library.desktop_libs.classpath"/>
    <path refid="core.runtime.production.module.classpath"/>
  </path>
  
  <path id="desktop.module.classpath">
    <path refid="${module.jdk.classpath.desktop}"/>
    <pathelement location="${desktop.output.dir}"/>
    <path refid="library.desktop_libs.classpath"/>
    <pathelement location="${core.testoutput.dir}"/>
    <pathelement location="${core.output.dir}"/>
    <path refid="library.core_libs.classpath"/>
  </path>
  
  <path id="desktop.runtime.module.classpath">
    <pathelement location="${desktop.testoutput.dir}"/>
    <pathelement location="${desktop.output.dir}"/>
    <path refid="library.desktop_libs.classpath"/>
    <path refid="core.runtime.module.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.desktop">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.desktop">
    <patternset refid="compiler.excluded"/>
    <patternset refid="excluded.from.module.desktop"/>
  </patternset>
  
  <path id="desktop.module.sourcepath">
    <dirset dir="${module.desktop.basedir}/desktop">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.desktop" depends="compile.module.desktop.production,compile.module.desktop.tests" description="Compile module desktop"/>
  
  <target name="compile.module.desktop.production" depends="register.custom.compilers,compile.module.core" description="Compile module desktop; production classes">
    <mkdir dir="${desktop.output.dir}"/>
    <javac2 destdir="${desktop.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.desktop}/javac">
      <compilerarg line="${compiler.args.desktop}"/>
      <bootclasspath refid="desktop.module.bootclasspath"/>
      <classpath refid="desktop.module.production.classpath"/>
      <src refid="desktop.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.desktop"/>
    </javac2>
    
    <copy todir="${desktop.output.dir}">
      <fileset dir="${module.desktop.basedir}/desktop/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
        <patternset refid="excluded.from.compilation.desktop"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.desktop.tests" depends="register.custom.compilers,compile.module.desktop.production" description="compile module desktop; test classes" unless="skip.tests"/>
  
  <target name="clean.module.desktop" description="cleanup module">
    <delete dir="${desktop.output.dir}"/>
    <delete dir="${desktop.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.core, clean.module.android, clean.module.desktop" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.core, compile.module.android, compile.module.desktop" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.android" value="${basedir}/out/artifacts/android"/>
    <property name="artifact.output.desktop:jar" value="${basedir}/out/artifacts"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.android.apk" value="${artifacts.temp.dir}/android.apk"/>
    <property name="temp.jar.path.desktop.jar" value="${artifacts.temp.dir}/desktop.jar"/>
  </target>
  
  <target name="artifact.android" depends="init.artifacts, compile.module.android" description="Build &#39;android&#39; artifact">
    <property name="artifact.temp.output.android" value="${artifacts.temp.dir}/android"/>
    <mkdir dir="${artifact.temp.output.android}"/>
    <zip destfile="${temp.jar.path.android.apk}">
      <zipfileset src="C:/Users/rabus/Dropbox/Projekty/Java/ProjectZero/out/production/android/android.afp.apk!/"/>
    </zip>
    <copy file="${temp.jar.path.android.apk}" tofile="${artifact.temp.output.android}/android.apk"/>
  </target>
  
  <target name="artifact.desktop:jar" depends="init.artifacts, compile.module.desktop, compile.module.core" description="Build &#39;desktop:jar&#39; artifact">
    <property name="artifact.temp.output.desktop:jar" value="${artifacts.temp.dir}/desktop_jar"/>
    <mkdir dir="${artifact.temp.output.desktop:jar}"/>
    <jar destfile="${temp.jar.path.desktop.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${desktop.output.dir}"/>
      <zipfileset dir="${core.output.dir}"/>
      <zipfileset src="${basedir}/desktop/libs/gdx-natives.jar"/>
      <zipfileset src="${basedir}/desktop/libs/gdx-backend-lwjgl.jar"/>
      <zipfileset src="${basedir}/desktop/libs/gdx-backend-lwjgl-natives.jar"/>
      <zipfileset src="${basedir}/desktop/libs/gdx-tools.jar"/>
      <zipfileset src="${basedir}/desktop/libs/gdx-tools-sources.jar"/>
      <zipfileset src="${basedir}/desktop/libs/gdx-backend-lwjgl-sources.jar"/>
      <zipfileset src="${basedir}/core/libs/gdx.jar"/>
      <zipfileset dir="${basedir}/android/assets"/>
    </jar>
    <copy file="${temp.jar.path.desktop.jar}" tofile="${artifact.temp.output.desktop:jar}/desktop.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.android, artifact.desktop:jar" description="Build all artifacts">
    <mkdir dir="${artifact.output.android}"/>
    <copy todir="${artifact.output.android}">
      <fileset dir="${artifact.temp.output.android}"/>
    </copy>
    <mkdir dir="${artifact.output.desktop:jar}"/>
    <copy todir="${artifact.output.desktop:jar}">
      <fileset dir="${artifact.temp.output.desktop:jar}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>